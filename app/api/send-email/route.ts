import { NextRequest, NextResponse } from "next/server";
import nodemailer from "nodemailer";

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { name, email, company, inquiryType, message } = body;

    // ✅ Validate required fields
    if (!name || !email || !inquiryType || !message) {
      return NextResponse.json(
        { error: "Missing required fields" },
        { status: 400 }
      );
    }

    // ✅ Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return NextResponse.json(
        { error: "Invalid email format" },
        { status: 400 }
      );
    }

    // ✅ Validate inquiry type
    const validInquiryTypes = [
      "startup-funding",
      "investor-partnership",
      "general-inquiry",
      "consultation",
    ];
    if (!validInquiryTypes.includes(inquiryType)) {
      return NextResponse.json(
        { error: "Invalid inquiry type" },
        { status: 400 }
      );
    }

    // ✅ Create inquiry record (optional data structuring)
    const inquiry = {
      name: name.trim(),
      email: email.toLowerCase().trim(),
      company: company?.trim() || "N/A",
      inquiryType,
      message: message.trim(),
      timestamp: new Date().toISOString(),
      status: "new" as const,
    };

    const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});




    // ✅ Define email details
    const adminMail = {
  from: process.env.EMAIL_USER,
  to: process.env.RECIPIENT_EMAIL,
  subject: ` New ${inquiry.inquiryType.replace('-', ' ')} Inquiry from ${inquiry.name}`,
  text: `
You have a new contact form submission:
  `,
  html: `
  <div style="font-family: 'Segoe UI', Helvetica, Arial, sans-serif; background: #f9fafc; padding: 30px;">
    <div style="max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
      <div style="background: linear-gradient(135deg, #4f46e5, #3b82f6); color: white; padding: 20px 25px; border-radius: 8px 8px 0 0;">
        <h2 style="margin: 0;">📩 New Contact Form Submission</h2>
      </div>
      <div style="padding: 25px; color: #333;">
        <p style="margin-bottom: 15px;">You’ve received a new inquiry through your website contact form.</p>
        <table style="width: 100%; border-collapse: collapse;">
          <tr><td style="padding: 8px 0; font-weight: bold;">👤 Name:</td><td>${inquiry.name}</td></tr>
          <tr><td style="padding: 8px 0; font-weight: bold;">📧 Email:</td><td>${inquiry.email}</td></tr>
          <tr><td style="padding: 8px 0; font-weight: bold;">🏢 Company:</td><td>${inquiry.company || "N/A"}</td></tr>
          <tr><td style="padding: 8px 0; font-weight: bold;">📂 Inquiry Type:</td><td>${inquiry.inquiryType}</td></tr>
          <tr><td style="padding: 8px 0; font-weight: bold; vertical-align: top;">📝 Message:</td><td>${inquiry.message}</td></tr>
          <tr><td style="padding: 8px 0; font-weight: bold;">⏰ Submitted At:</td><td>${new Date(inquiry.timestamp).toLocaleString()}</td></tr>
        </table>
      </div>
      <div style="background: #f3f4f6; padding: 15px 25px; border-top: 1px solid #e5e7eb; font-size: 13px; color: #666; text-align: center;">
        <p style="margin: 0;">This message was automatically generated by your website contact form.</p>
      </div>
    </div>
  </div>
  `,
};


   

    await transporter.sendMail(adminMail);
        const userMail = {
      from: `"CrowdHarbor" <${process.env.RECIPIENT_EMAIL}>`,
      to: inquiry.email,
      subject: `Thank you for contacting us!`,
      html: `
        <div style="font-family: 'Segoe UI', Arial, sans-serif; background: #f9fafc; padding: 30px;">
  <div style="max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
    <div style="background: linear-gradient(135deg, #3b82f6, #1e3a8a); color: white; padding: 20px 25px; border-radius: 8px 8px 0 0;">
      <h2 style="margin: 0;">Thank You, ${inquiry.name}!</h2>
    </div>
    <div style="padding: 25px; color: #333;">
      <p>We’ve received your message and our team will reach out to you shortly.</p>
      <blockquote style="margin: 10px 0; padding: 10px 15px; background: #f3f4f6; border-left: 3px solid #3b82f6;">
        ${inquiry.message}
      </blockquote>
      <p>Thank you for taking the time to contact us.</p>
      <p>— The CrowdHarbor Team</p>
    </div>
  </div>
</div>

      `,
    };

    await transporter.sendMail(userMail);


    return NextResponse.json({
      success: true,
      message: "Email sent successfully!",
    });
  } catch (error) {
    console.error("Unexpected error:", error);
    return NextResponse.json(
      { error: "An unexpected error occurred" },
      { status: 500 }
    );
  }
}
