import { NextRequest, NextResponse } from "next/server"
import nodemailer from "nodemailer"

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const {
      companyWebsite,
      companyName,
      ownerName,
      founderEmail,
      targetRaise,
      companyDescription,
    } = body

    // ‚úÖ Validate required fields
    if (
      !companyWebsite ||
      !companyName ||
      !ownerName ||
      !founderEmail ||
      !targetRaise ||
      !companyDescription
    ) {
      return NextResponse.json(
        { error: "Missing required fields" },
        { status: 400 }
      )
    }

    // ‚úÖ Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(founderEmail)) {
      return NextResponse.json(
        { error: "Invalid email format" },
        { status: 400 }
      )
    }

    // ‚úÖ Create submission record
    const submission = {
      companyWebsite: companyWebsite.trim(),
      companyName: companyName.trim(),
      ownerName: ownerName.trim(),
      founderEmail: founderEmail.toLowerCase().trim(),
      targetRaise: targetRaise.trim(),
      companyDescription: companyDescription.trim(),
      timestamp: new Date().toISOString(),
      status: "new" as const,
    }

    // ‚úÖ Configure transporter
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    })

    // ‚úÖ Admin notification email
    const adminMail = {
      from: process.env.EMAIL_USER,
      to: process.env.RECIPIENT_EMAIL,
      subject: `üöÄ New Company Submission: ${submission.companyName}`,
      html: `
        <div style="font-family: 'Segoe UI', Helvetica, Arial, sans-serif; background: #f9fafc; padding: 30px;">
          <div style="max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
            <div style="background: linear-gradient(135deg, #4f46e5, #3b82f6); color: white; padding: 20px 25px; border-radius: 8px 8px 0 0;">
              <h2 style="margin: 0;">üì© New Company Submission</h2>
            </div>
            <div style="padding: 25px; color: #333;">
              <p style="margin-bottom: 15px;">A new startup application has been submitted via your website.</p>
              <table style="width: 100%; border-collapse: collapse;">
                <tr><td style="padding: 8px 0; font-weight: bold;">üè¢ Company Name:</td><td>${submission.companyName}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">üåê Website:</td><td><a href="${submission.companyWebsite}" target="_blank">${submission.companyWebsite}</a></td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">üë§ Founder / CEO:</td><td>${submission.ownerName}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">üìß Founder Email:</td><td>${submission.founderEmail}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">üí∞ Target Raise:</td><td>${submission.targetRaise}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold; vertical-align: top;">üìù Description:</td><td>${submission.companyDescription}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">‚è∞ Submitted At:</td><td>${new Date(submission.timestamp).toLocaleString()}</td></tr>
              </table>
            </div>
            <div style="background: #f3f4f6; padding: 15px 25px; border-top: 1px solid #e5e7eb; font-size: 13px; color: #666; text-align: center;">
              <p style="margin: 0;">This message was automatically generated by your website submission form.</p>
            </div>
          </div>
        </div>
      `,
    }

    await transporter.sendMail(adminMail)

    // ‚úÖ Confirmation email to founder
    // subject: `Thank you for submitting your company!
    const userMail = {
      from: `"CrowdHarbor" <${process.env.RECIPIENT_EMAIL}>`,
      to: submission.founderEmail,
      subject: `Thank you for submitting your company!`,
      html: `
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CrowdHarbor</title>
    <style>
      body {
        font-family: 'Segoe UI', Arial, sans-serif;
        background-color: #f4f6f8;
        margin: 0;
        padding: 0;
      }
      .container {
        max-width: 600px;
        margin: 30px auto;
        background-color: #ffffff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
      }
      .header {
        background: #004aad;
        padding: 30px 20px;
        text-align: center;
      }
      .header img {
        max-width: 160px;
        height: auto;
      }
      .content {
        padding: 30px 25px;
        color: #333333;
        line-height: 1.6;
      }
      .content h2 {
        color: #004aad;
        margin-top: 0;
      }
      .btn {
        display: inline-block;
        padding: 12px 24px;
        background-color: #004aad;
        color: white !important;
        text-decoration: none;
        border-radius: 6px;
        margin: 15px 0;
      }
      .footer {
        text-align: center;
        font-size: 13px;
        color: #777777;
        padding: 20px;
        border-top: 1px solid #eaeaea;
      }
      @media (max-width: 600px) {
        .content, .header {
          padding: 20px;
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <img src="/" alt="CrowdHarbor Logo" />
      </div>
      <div class="content">
        <h2>Hi ${submission.ownerName.split(" ")[0]},</h2>
        <p>Exciting news! Your submission for <strong>${submission.companyName}</strong> has been approved. You‚Äôre now one step closer to joining the CrowdHarbor community of innovative founders and investors.</p>

        <p>To complete your setup and explore investment opportunities, visit your account and finalize your profile today.</p>

        <a href="https://crowdharbor.com/login" class="btn">Go to Dashboard</a>

        <p>We‚Äôre thrilled to have you on board and can‚Äôt wait to see what‚Äôs next for <strong>${submission.companyName}</strong>!</p>
        <p>‚Äî The CrowdHarbor Team</p>
      </div>
      <div class="footer">
        <p>You are receiving this email because you registered on CrowdHarbor.</p>
        <p>¬© ${new Date().getFullYear()} CrowdHarbor Inc. | All rights reserved.</p>
      </div>
    </div>
  </body>
  </html>
  `
    }

    await transporter.sendMail(userMail)

    return NextResponse.json({
      success: true,
      message: "Submission received and emails sent successfully!",
    })
  } catch (error) {
    console.error("Unexpected error:", error)
    return NextResponse.json(
      { error: "An unexpected error occurred" },
      { status: 500 }
    )
  }
}
