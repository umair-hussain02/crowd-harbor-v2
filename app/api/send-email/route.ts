import { NextRequest, NextResponse } from "next/server"
import nodemailer from "nodemailer"

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const {
      companyWebsite,
      companyName,
      ownerName,
      founderEmail,
      targetRaise,
      companyDescription,
    } = body

    // ✅ Validate required fields
    if (
      !companyWebsite ||
      !companyName ||
      !ownerName ||
      !founderEmail ||
      !targetRaise ||
      !companyDescription
    ) {
      return NextResponse.json(
        { error: "Missing required fields" },
        { status: 400 }
      )
    }

    // ✅ Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(founderEmail)) {
      return NextResponse.json(
        { error: "Invalid email format" },
        { status: 400 }
      )
    }

    // ✅ Create submission record
    const submission = {
      companyWebsite: companyWebsite.trim(),
      companyName: companyName.trim(),
      ownerName: ownerName.trim(),
      founderEmail: founderEmail.toLowerCase().trim(),
      targetRaise: targetRaise.trim(),
      companyDescription: companyDescription.trim(),
      timestamp: new Date().toISOString(),
      status: "new" as const,
    }

    // ✅ Configure transporter
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    })

    // ✅ Admin notification email
    const adminMail = {
      from: process.env.EMAIL_USER,
      to: process.env.RECIPIENT_EMAIL,
      subject: `🚀 New Company Submission: ${submission.companyName}`,
      html: `
        <div style="font-family: 'Segoe UI', Helvetica, Arial, sans-serif; background: #f9fafc; padding: 30px;">
          <div style="max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
            <div style="background: linear-gradient(135deg, #4f46e5, #3b82f6); color: white; padding: 20px 25px; border-radius: 8px 8px 0 0;">
              <h2 style="margin: 0;">📩 New Company Submission</h2>
            </div>
            <div style="padding: 25px; color: #333;">
              <p style="margin-bottom: 15px;">A new startup application has been submitted via your website.</p>
              <table style="width: 100%; border-collapse: collapse;">
                <tr><td style="padding: 8px 0; font-weight: bold;">🏢 Company Name:</td><td>${submission.companyName}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">🌐 Website:</td><td><a href="${submission.companyWebsite}" target="_blank">${submission.companyWebsite}</a></td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">👤 Founder / CEO:</td><td>${submission.ownerName}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">📧 Founder Email:</td><td>${submission.founderEmail}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">💰 Target Raise:</td><td>${submission.targetRaise}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold; vertical-align: top;">📝 Description:</td><td>${submission.companyDescription}</td></tr>
                <tr><td style="padding: 8px 0; font-weight: bold;">⏰ Submitted At:</td><td>${new Date(submission.timestamp).toLocaleString()}</td></tr>
              </table>
            </div>
            <div style="background: #f3f4f6; padding: 15px 25px; border-top: 1px solid #e5e7eb; font-size: 13px; color: #666; text-align: center;">
              <p style="margin: 0;">This message was automatically generated by your website submission form.</p>
            </div>
          </div>
        </div>
      `,
    }

    await transporter.sendMail(adminMail)

    // ✅ Confirmation email to founder
    const userMail = {
      from: `"CrowdHarbor" <${process.env.RECIPIENT_EMAIL}>`,
      to: submission.founderEmail,
      subject: `Thank you for submitting your company!`,
      html: `
        <div style="font-family: 'Segoe UI', Arial, sans-serif; background: #f9fafc; padding: 30px;">
          <div style="max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
            <div style="background: linear-gradient(135deg, #3b82f6, #1e3a8a); color: white; padding: 20px 25px; border-radius: 8px 8px 0 0;">
              <h2 style="margin: 0;">Thank You, ${submission.ownerName.split(" ")[0]}!</h2>
            </div>
            <div style="padding: 25px; color: #333;">
              <p>We’ve received your company details and our team will reach out shortly to discuss next steps.</p>
              <blockquote style="margin: 10px 0; padding: 10px 15px; background: #f3f4f6; border-left: 3px solid #3b82f6;">
                ${submission.companyDescription}
              </blockquote>
              <p>We look forward to learning more about <strong>${submission.companyName}</strong>!</p>
              <p>— The CrowdHarbor Team</p>
            </div>
          </div>
        </div>
      `,
    }

    await transporter.sendMail(userMail)

    return NextResponse.json({
      success: true,
      message: "Submission received and emails sent successfully!",
    })
  } catch (error) {
    console.error("Unexpected error:", error)
    return NextResponse.json(
      { error: "An unexpected error occurred" },
      { status: 500 }
    )
  }
}
